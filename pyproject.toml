[project]
name = "httpx-retries"
version = "0.1.0"
description = "Intelligently retry requests with httpx"
readme = "README.md"
license = "MIT"
authors = [{ name = "Will Ockmore", email = "will.ockmore@gmail.com" }]
dependencies = ["httpx>=0.27.0"]

[dependency-groups]
dev = [
    "httpx",
    "ruff",
    "mypy",
    "pytest",
    "pytest-asyncio",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pygments",
    "coverage",
]

# Tooling configuration.

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "C4"]

[tool.coverage.run]
source = ["httpx_retry", "tests"]
relative_files = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100
exclude_lines = [
    # Allow manually specifying untestable code.
    "pragma: no cover",
    # Allow conditional imports to remain untested.
    "if sys.version_info.*",
    # Can't test type checking code.
    "if TYPE_CHECKING:",
    "@overload",
    "^\\s+\\.\\.\\.\\s*$",
]

[tool.mypy]
strict = true
show_column_numbers = true

[tool.pytest.ini_options]
testpaths = ["docs", "tests"]
console_output_style = "classic"
# Support doctests.
addopts = "--show-capture stdout --doctest-glob='*.rst' --doctest-modules"
